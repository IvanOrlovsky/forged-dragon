name: Deploy Next.js site to VPS

on:
    push:
        branches: [main]
    workflow_dispatch:

permissions:
    contents: read

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
            - name: Install pnpm
              run: npm install -g pnpm
            - name: Install dependencies
              run: pnpm install
            - name: Build with Next.js
              run: pnpm build
            - name: Archive files
              run: tar -czf nextjs-build.tar.gz .next public package.json pnpm-lock.yaml
            - name: List files after build
              run: ls -la
            - name: Print working directory
              run: pwd

    deploy:
        environment:
            name: vps
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Setup SSH
              uses: webfactory/ssh-agent@v0.5.3
              with:
                  ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

            - name: Print server variables
              run: echo "Server user ${{ secrets.SERVER_USER }}; Server host ${{ secrets.SERVER_HOST }}"

            - name: List files before deploying
              run: ls -la

            - name: Deploy to VPS
              run: |
                  echo "Copying files to the server..."
                  scp -o StrictHostKeyChecking=no nextjs-build.tar.gz ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/root/forged-dragon/

                  echo "Connecting to the server and extracting files..."
                  ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
                    set -x  # Enable debug mode to show commands and their arguments
                    cd /root/forged-dragon || { echo "Failed to change directory"; exit 1; }
                    tar -xzf nextjs-build.tar.gz || { echo "Failed to extract tarball"; exit 1; }
                    pnpm install --production || { echo "Failed to install dependencies"; exit 1; }
                    pnpm start || { echo "Failed to start the application"; exit 1; }
                  EOF
